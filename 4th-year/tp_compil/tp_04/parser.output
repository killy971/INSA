   0  $accept : %entry% $end

   1  main : r_bloc EOF

   2  r_bloc : BEGIN r_sdecl PTVIRG r_sinst END

   3  r_sdecl : r_decl
   4          | r_decl VIRG r_sdecl

   5  r_decl : r_type IDENT

   6  r_type : INT
   7         | BOOL

   8  r_sinst : r_inst
   9          | r_inst PTVIRG r_sinst

  10  r_inst : r_bloc
  11         | IDENT FLECHE r_expr

  12  r_expr : r_expr PLUS r_expr
  13         | r_expr INF r_expr
  14         | r_expr AND r_expr
  15         | PAROUV r_expr PARFERM
  16         | IDENT

  17  %entry% : '\001' main

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . main  (17)

	BEGIN  shift 3
	.  error

	main  goto 4
	r_bloc  goto 5


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	r_bloc : BEGIN . r_sdecl PTVIRG r_sinst END  (2)

	INT  shift 6
	BOOL  shift 7
	.  error

	r_sdecl  goto 8
	r_decl  goto 9
	r_type  goto 10


state 4
	%entry% : '\001' main .  (17)

	.  reduce 17


state 5
	main : r_bloc . EOF  (1)

	EOF  shift 11
	.  error


state 6
	r_type : INT .  (6)

	.  reduce 6


state 7
	r_type : BOOL .  (7)

	.  reduce 7


state 8
	r_bloc : BEGIN r_sdecl . PTVIRG r_sinst END  (2)

	PTVIRG  shift 12
	.  error


state 9
	r_sdecl : r_decl .  (3)
	r_sdecl : r_decl . VIRG r_sdecl  (4)

	VIRG  shift 13
	PTVIRG  reduce 3


state 10
	r_decl : r_type . IDENT  (5)

	IDENT  shift 14
	.  error


state 11
	main : r_bloc EOF .  (1)

	.  reduce 1


state 12
	r_bloc : BEGIN r_sdecl PTVIRG . r_sinst END  (2)

	IDENT  shift 15
	BEGIN  shift 3
	.  error

	r_bloc  goto 16
	r_sinst  goto 17
	r_inst  goto 18


state 13
	r_sdecl : r_decl VIRG . r_sdecl  (4)

	INT  shift 6
	BOOL  shift 7
	.  error

	r_sdecl  goto 19
	r_decl  goto 9
	r_type  goto 10


state 14
	r_decl : r_type IDENT .  (5)

	.  reduce 5


state 15
	r_inst : IDENT . FLECHE r_expr  (11)

	FLECHE  shift 20
	.  error


state 16
	r_inst : r_bloc .  (10)

	.  reduce 10


state 17
	r_bloc : BEGIN r_sdecl PTVIRG r_sinst . END  (2)

	END  shift 21
	.  error


state 18
	r_sinst : r_inst .  (8)
	r_sinst : r_inst . PTVIRG r_sinst  (9)

	PTVIRG  shift 22
	END  reduce 8


state 19
	r_sdecl : r_decl VIRG r_sdecl .  (4)

	.  reduce 4


state 20
	r_inst : IDENT FLECHE . r_expr  (11)

	IDENT  shift 23
	PAROUV  shift 24
	.  error

	r_expr  goto 25


state 21
	r_bloc : BEGIN r_sdecl PTVIRG r_sinst END .  (2)

	.  reduce 2


state 22
	r_sinst : r_inst PTVIRG . r_sinst  (9)

	IDENT  shift 15
	BEGIN  shift 3
	.  error

	r_bloc  goto 16
	r_sinst  goto 26
	r_inst  goto 18


state 23
	r_expr : IDENT .  (16)

	.  reduce 16


state 24
	r_expr : PAROUV . r_expr PARFERM  (15)

	IDENT  shift 23
	PAROUV  shift 24
	.  error

	r_expr  goto 27


state 25
	r_inst : IDENT FLECHE r_expr .  (11)
	r_expr : r_expr . PLUS r_expr  (12)
	r_expr : r_expr . INF r_expr  (13)
	r_expr : r_expr . AND r_expr  (14)

	AND  shift 28
	INF  shift 29
	PLUS  shift 30
	END  reduce 11
	PTVIRG  reduce 11


state 26
	r_sinst : r_inst PTVIRG r_sinst .  (9)

	.  reduce 9


state 27
	r_expr : r_expr . PLUS r_expr  (12)
	r_expr : r_expr . INF r_expr  (13)
	r_expr : r_expr . AND r_expr  (14)
	r_expr : PAROUV r_expr . PARFERM  (15)

	AND  shift 28
	INF  shift 29
	PLUS  shift 30
	PARFERM  shift 31
	.  error


state 28
	r_expr : r_expr AND . r_expr  (14)

	IDENT  shift 23
	PAROUV  shift 24
	.  error

	r_expr  goto 32


state 29
	r_expr : r_expr INF . r_expr  (13)

	IDENT  shift 23
	PAROUV  shift 24
	.  error

	r_expr  goto 33


state 30
	r_expr : r_expr PLUS . r_expr  (12)

	IDENT  shift 23
	PAROUV  shift 24
	.  error

	r_expr  goto 34


state 31
	r_expr : PAROUV r_expr PARFERM .  (15)

	.  reduce 15


state 32
	r_expr : r_expr . PLUS r_expr  (12)
	r_expr : r_expr . INF r_expr  (13)
	r_expr : r_expr . AND r_expr  (14)
	r_expr : r_expr AND r_expr .  (14)

	INF  shift 29
	PLUS  shift 30
	END  reduce 14
	PTVIRG  reduce 14
	AND  reduce 14
	PARFERM  reduce 14


state 33
	r_expr : r_expr . PLUS r_expr  (12)
	r_expr : r_expr . INF r_expr  (13)
	r_expr : r_expr INF r_expr .  (13)
	r_expr : r_expr . AND r_expr  (14)

	PLUS  shift 30
	END  reduce 13
	PTVIRG  reduce 13
	AND  reduce 13
	INF  reduce 13
	PARFERM  reduce 13


state 34
	r_expr : r_expr . PLUS r_expr  (12)
	r_expr : r_expr PLUS r_expr .  (12)
	r_expr : r_expr . INF r_expr  (13)
	r_expr : r_expr . AND r_expr  (14)

	.  reduce 12


17 terminals, 10 nonterminals
18 grammar rules, 35 states
